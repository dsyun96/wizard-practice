(define (A x y)
  (cond ((= y 0) 0)
        ((= x 0) (* 2 y))
        ((= y 1) 2)
        (else (A (- x 1) (A x (- y 1))))))

(1) (A 1 10)의 값은?
-> (A 0 (A 1 9))
-> (A 0 (A 0 (A 1 8)))
-> ...
-> (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 1 1))))))))))
-> (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 2)))))))))
-> (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 4))))))))
-> (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 8)))))))
-> (A 0 (A 0 (A 0 (A 0 (A 0 (A 0 16))))))
-> (A 0 (A 0 (A 0 (A 0 (A 0 32)))))
-> (A 0 (A 0 (A 0 (A 0 64))))
-> (A 0 (A 0 (A 0 128)))
-> (A 0 (A 0 256))
-> (A 0 512)
-> 1024

(2) (A 2 4)의 값은?
-> (A 1 (A 2 3))
-> (A 1 (A 1 (A 2 2))
-> (A 1 (A 1 (A 1 (A 2 1))))
-> (A 1 (A 1 (A 1 2)))
-> (A 1 (A 1 4))
-> (A 1 16)
-> 65536

(3) (A 3 3)의 값은?
-> (A 2 (A 3 2))
-> (A 2 (A 2 (A 3 1)))
-> (A 2 (A 2 2))
-> (A 2 4)
-> 65536

(4) 프로시저 (define (f n) (A 0 n))의 기능을 수학적으로 정의해 보라.

(A 0 n)
-> (* 2 n)

즉, (f n)은 2n을 나타낸다.

(5) 프로시저 (define (g n) (A 1 n))의 기능을 수학적으로 정의해 보라.

(A 1 n)
-> (A 0 (A 0 (... (A 1 1)...)
   \---v---/
      n 번

즉, (g n)은 2^n을 나타낸다.

(6) 프로시저 (define (h n) (A 2 n))의 기능을 수학적으로 정의해 보라.

(A 2 n)
-> (A 1 (A 1 (... (A 2 1)...)
   \---v---/
      n 번

즉, (h n)은 2↑↑n (테트레이션)을 나타낸다.
