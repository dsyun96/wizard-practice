;; a. 다음 꼴로 쓴 수식을 끝없는 연속 분수(continued fraction)라 한다.
;;
;;             N1
;; f = ------------------
;;               N2
;;     D1 + -------------
;;                  N3
;;          D2 + --------
;;               D3 + ...
;;
;; 이를테면 Ni와 Di가 1일 때 위 분수를 펼치면 1/φ에 다가간다(φ는 1.2.2절
;; 에서 나온 황금비다.). 계속 나눈 수 값을 어림잡을 때 다음처럼 정해 둔 마디(항)
;; 몇 개만 펼치고 나머지 마디는 잘라내는 방법을 쓸 수 있다. 이를 두고 k-마디로
;; 끝나는 연속 분수(k-항 유한 연속 분수, k-term finite continued fraction)라 한다.
;;
;;         N1
;; ------------------
;;            N2
;; D1 + -------------
;;                Nk
;;       ...   + ----
;;                Dk
;;
;; 분수에서 (마디 번호 i를 인자로 받아) Ni와 Di 값을 계산하는 프로시저를
;; n과 d라 하자. k-마디로 끝나는 연속 분수 값을 (cont-frac n d k)로 계산할
;; 수 있도록 프로시저 cont-frac을 정의하라. 프로시저가 올바로 움직이는지
;; 살펴보기 위해서, k 값을 조금씩 늘려가며 아래 식으로 1/φ에 가까운 값을
;; 얻어내는 실험을 하자.
;;
;; (cont-frac (lambda (i) 1.0)
;;            (lambda (i) 1.0)
;;            k)
;;
;; k 값이 얼마나 커야 소수점 아래 4자리까지 맞아떨어지는 값을 어림잡을 수 있는가?

(define (cont-frac n d k)
  (define (iter i)
    (if (> i k)
        0
        (/ (n i) (+ (d i) (iter (+ i 1))))))
  (iter 1))

(/ 1
   (cont-frac (lambda (i) 1.0)
              (lambda (i) 1.0)
              12))

;; output:
;; 1.6180555555555558

;; b. cont-frac 프로시저의 프로세스가 되돈다면 반복하게끔 고쳐 쓰고, 그 반대로
;; 반복한다면 되돌게끔 고쳐라.

(define (cont-frac n d k)
  (define (iter i result)
    (if (< i 1)
        result
        (iter (- i 1) (/ (n i) (+ (d i) result)))))
  (iter k 0))
